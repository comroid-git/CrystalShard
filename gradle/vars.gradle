import static java.lang.System.getenv

ext {
    isAutoDeploy = rootProject.name != 'repo' || getenv().containsKey("TEAMCITY") || getenv().containsKey("JITPACK")
    artifactName = project.name
    projectDescription = 'Spring Beans for creating a Discord Bot'
    userbase = 'comroid-git'
    snapshot = project.version.endsWith('SNAPSHOT')

    canSign = getenv().containsKey('GPG_KEYNAME') && getenv().containsKey('GPG_PASSPHRASE')
    canPublishToSpace = getenv().containsKey('SPACE_PASSWORD') && getenv().containsKey('SPACE_USERNAME')
    canPublishToSonatype = canSign && getenv().containsKey('SONATYPE_PASSWORD') && getenv().containsKey('SONATYPE_USERNAME')
    canPublishToGitHub = !snapshot && canSign && getenv().containsKey('GITHUB_PASSWORD') && getenv().containsKey('GITHUB_USERNAME')
}

if (canSign) {
    ext.'signing.gnupg.keyName' = getenv('GPG_KEYNAME')
    ext.'signing.gnupg.passphrase' = getenv('GPG_PASSPHRASE')
}

if (canPublishToSpace) {
    ext {
        spaceUsername = getenv('SPACE_USERNAME')
        spacePassword = getenv('SPACE_PASSWORD')
    }
}

if (canPublishToSonatype) {
    ext {
        sonatypeUsername = getenv('SONATYPE_USERNAME')
        sonatypePassword = getenv('SONATYPE_PASSWORD')
    }
}

if (canPublishToGitHub) {
    ext {
        githubRegistryUrl = uri("https://maven.pkg.github.com/${userbase.toLowerCase()}/${(parent == null || parent.name == 'repo' ? this : parent).name.toLowerCase()}")
        githubUsername = getenv('GITHUB_USERNAME')
        githubPassword = getenv('GITHUB_PASSWORD')
    }
}
