import java.util.concurrent.TimeUnit

plugins {
    id 'java-library'
    id 'org.springframework.boot' version '3.0.0'
    id 'io.spring.dependency-management' version '1.1.0'
}

ext {
    buildId = TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis())
}
group 'org.comroid'
version = '1.0.0' + '.' + buildId

sourceCompatibility = 17
targetCompatibility = 17

tasks.findByName('wrapper')?.configure {
    gradleVersion = '7.4'
    distributionUrl = "https://services.gradle.org/distributions/gradle-$gradleVersion-all.zip"
}

apply from: "gradle/vars.gradle"

tasks.withType(Javadoc) {
    source = sourceSets.main.java

    options {
        encoding = 'UTF-8'
        /*
        links = [
                "https://docs.oracle.com/javase/8/docs/api/",
                "https://docs.oracle.com/javaee/7/api/"
        ]
        */
    }
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava

    try {
        archiveClassifier.set 'sources'
    } catch (MissingPropertyException ignored) {
        classifier = "sources"
    }
}

task javadocJar(type: Jar) {
    dependsOn 'javadoc'

    from javadoc.destinationDir

    try {
        archiveClassifier.set 'javadoc'
    } catch (MissingPropertyException ignored) {
        classifier = "javadoc"
    }
}

processResources {
    from(sourceSets.main.resources) {
        expand project.properties
        duplicatesStrategy = DuplicatesStrategy.INCLUDE
    }
}

compileJava.options.encoding = 'UTF-8'

repositories {
    maven { url 'https://maven.comroid.org' }
    mavenLocal()
    jcenter()
    mavenCentral()
}

dependencies {
    compileOnly 'org.jetbrains:annotations:23.1.0'

    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'

    testCompileOnly 'org.projectlombok:lombok:1.18.24'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.24'

    if (findProject(':spring-util') != null)
        api project(':spring-util')
    else api 'org.comroid:spring-util:1.+'
}

apply from: "gradle/publishing.gradle"
